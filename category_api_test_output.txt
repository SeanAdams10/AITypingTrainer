============================= test session starts =============================
platform win32 -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0 -- d:\OneDrive\Documents\SeanDev\AITypingTrainer\.venv\Scripts\python.exe
cachedir: .pytest_cache
PyQt5 5.15.11 -- Qt runtime 5.15.2 -- Qt compiled 5.15.2
rootdir: D:\OneDrive\Documents\SeanDev\AITypingTrainer
plugins: mock-3.14.0, qt-4.4.0
collecting ... collected 11 items

tests/api/test_category_api.py::test_create_category[TestCat-200] [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_TestCat_20\test_api_category.db
DEBUG: request.form = {}
DEBUG: request.json = {'name': 'TestCat'}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_TestCat_20\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': 'TestCat'}
[DEBUG] Category.create_category called with name: TestCat
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_TestCat_20\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_TestCat_20\test_api_category.db
[DEBUG] Existing categories with this name: []
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_TestCat_20\test_api_category.db
[DEBUG] Inserted category_id: 1
[DEBUG] category_id returned from create_category: 1
[DEBUG] API response on category creation: {'success': True, 'message': "Category 'TestCat' added successfully", 'category_id': 1, 'category_name': 'TestCat'}
PASSED [  9%]
tests/api/test_category_api.py::test_create_category[-400] [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category__400_0\test_api_category.db
DEBUG: request.form = {}
DEBUG: request.json = {'name': ''}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category__400_0\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': ''}
[DEBUG] Extracted name is blank or None: ''
PASSED        [ 18%]
tests/api/test_category_api.py::test_create_category[AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-400] [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_AAAAAAAAA0\test_api_category.db
DEBUG: request.form = {}
DEBUG: request.json = {'name': 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_AAAAAAAAA0\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'}
[DEBUG] Category.create_category called with name: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_AAAAAAAAA0\test_api_category.db
[DEBUG] Exception in create_category: ValueError('Category name must be 64 characters or less.')
[DEBUG] ValueError: Category name must be 64 characters or less.
PASSED [ 27%]
tests/api/test_category_api.py::test_create_category[Caf\xe9-400] [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_Caf_xe9_40\test_api_category.db
DEBUG: request.form = {}
DEBUG: request.json = {'name': 'CafΘ'}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_Caf_xe9_40\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': 'CafΘ'}
[DEBUG] Category.create_category called with name: CafΘ
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_Caf_xe9_40\test_api_category.db
[DEBUG] Exception in create_category: ValueError('Category name must be ASCII-only.')
[DEBUG] ValueError: Category name must be ASCII-only.
PASSED [ 36%]
tests/api/test_category_api.py::test_create_category[Robert'); DROP TABLE text_category;---400] [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_Robert___0\test_api_category.db
DEBUG: request.form = {}
DEBUG: request.json = {'name': "Robert'); DROP TABLE text_category;--"}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_Robert___0\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': "Robert'); DROP TABLE text_category;--"}
[DEBUG] Category.create_category called with name: Robert'); DROP TABLE text_category;--
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_category_Robert___0\test_api_category.db
[DEBUG] Exception in create_category: ValueError('Category name contains invalid characters.')
[DEBUG] ValueError: Category name contains invalid characters.
PASSED [ 45%]
tests/api/test_category_api.py::test_create_duplicate_category [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_duplicate_category0\test_api_category.db
DEBUG: request.form = {}
DEBUG: request.json = {'name': 'DupCat'}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_duplicate_category0\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': 'DupCat'}
[DEBUG] Category.create_category called with name: DupCat
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_duplicate_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_duplicate_category0\test_api_category.db
[DEBUG] Existing categories with this name: []
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_duplicate_category0\test_api_category.db
[DEBUG] Inserted category_id: 1
[DEBUG] category_id returned from create_category: 1
[DEBUG] API response on category creation: {'success': True, 'message': "Category 'DupCat' added successfully", 'category_id': 1, 'category_name': 'DupCat'}
DEBUG: request.form = {}
DEBUG: request.json = {'name': 'DupCat'}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_duplicate_category0\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': 'DupCat'}
[DEBUG] Category.create_category called with name: DupCat
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_duplicate_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_create_duplicate_category0\test_api_category.db
[DEBUG] Existing categories with this name: [{'category_id': 1}]
[DEBUG] Exception in create_category: ValueError('Category name must be unique.')
[DEBUG] ValueError: Category name must be unique.
PASSED    [ 54%]
tests/api/test_category_api.py::test_list_categories [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
DEBUG: request.form = {}
DEBUG: request.json = {'name': 'Cat1'}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': 'Cat1'}
[DEBUG] Category.create_category called with name: Cat1
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
[DEBUG] Existing categories with this name: []
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
[DEBUG] Inserted category_id: 1
[DEBUG] category_id returned from create_category: 1
[DEBUG] API response on category creation: {'success': True, 'message': "Category 'Cat1' added successfully", 'category_id': 1, 'category_name': 'Cat1'}
DEBUG: request.form = {}
DEBUG: request.json = {'name': 'Cat2'}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': 'Cat2'}
[DEBUG] Category.create_category called with name: Cat2
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
[DEBUG] Existing categories with this name: []
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
[DEBUG] Inserted category_id: 2
[DEBUG] category_id returned from create_category: 2
[DEBUG] API response on category creation: {'success': True, 'message': "Category 'Cat2' added successfully", 'category_id': 2, 'category_name': 'Cat2'}
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_list_categories0\test_api_category.db
PASSED              [ 63%]
tests/api/test_category_api.py::test_rename_category [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
DEBUG: request.form = {}
DEBUG: request.json = {'name': 'OldName'}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': 'OldName'}
[DEBUG] Category.create_category called with name: OldName
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DEBUG] Existing categories with this name: []
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DEBUG] Inserted category_id: 1
[DEBUG] category_id returned from create_category: 1
[DEBUG] API response on category creation: {'success': True, 'message': "Category 'OldName' added successfully", 'category_id': 1, 'category_name': 'OldName'}
[DEBUG] Content-Type (rename): application/json
[DEBUG] Received JSON (rename): {'name': 'NewName'}
[DEBUG] Extracted new_name (rename): 'NewName'
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DEBUG] Content-Type (rename): application/x-www-form-urlencoded
[DEBUG] Received FORM (rename): {'name': ''}
[DEBUG] Extracted new_name (rename): ''
DEBUG: request.form = {'name': 'Another'}
[DEBUG] Unexpected Exception in add_category_api (outer): UnsupportedMediaType: 415 Unsupported Media Type: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.
[DEBUG] Content-Type (rename): application/x-www-form-urlencoded
[DEBUG] Received FORM (rename): {'name': 'Another'}
[DEBUG] Extracted new_name (rename): 'Another'
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
FAILED              [ 72%]
tests/api/test_category_api.py::test_rename_nonexistent_category [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_nonexistent_catego0\test_api_category.db
[DEBUG] Content-Type (rename): application/x-www-form-urlencoded
[DEBUG] Received FORM (rename): {'name': 'DoesNotExist'}
[DEBUG] Extracted new_name (rename): 'DoesNotExist'
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_nonexistent_catego0\test_api_category.db
PASSED  [ 81%]
tests/api/test_category_api.py::test_delete_category [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_category0\test_api_category.db
DEBUG: request.form = {}
DEBUG: request.json = {'name': 'DelMe'}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_category0\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': 'DelMe'}
[DEBUG] Category.create_category called with name: DelMe
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_category0\test_api_category.db
[DEBUG] Existing categories with this name: []
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_category0\test_api_category.db
[DEBUG] Inserted category_id: 1
[DEBUG] category_id returned from create_category: 1
[DEBUG] API response on category creation: {'success': True, 'message': "Category 'DelMe' added successfully", 'category_id': 1, 'category_name': 'DelMe'}
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_category0\test_api_category.db
PASSED              [ 90%]
tests/api/test_category_api.py::test_delete_nonexistent_category [DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_nonexistent_catego0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_delete_nonexistent_catego0\test_api_category.db
PASSED  [100%]

================================== FAILURES ===================================
____________________________ test_rename_category _____________________________

client = <FlaskClient <Flask 'tests.api.test_category_api'>>

    def test_rename_category(client):
        # Create
        resp = client.post("/api/categories", json={"name": "OldName"})
        cat_id = resp.get_json()["category_id"]
        # Happy path
        resp2 = client.put(f"/api/categories/{cat_id}", json={"name": "NewName"})
        assert resp2.status_code == 200
        data = resp2.get_json()
        assert data["category_name"] == "NewName"
        # Blank
        resp3 = client.put(f"/api/categories/{cat_id}", data={"name": ""})
        assert resp3.status_code == 400
        # Duplicate
        client.post("/api/categories", data={"name": "Another"})
        resp4 = client.put(f"/api/categories/{cat_id}", data={"name": "Another"})
>       assert resp4.status_code == 400
E       assert 200 == 400
E        +  where 200 = <WrapperTestResponse streamed [200 OK]>.status_code

tests\api\test_category_api.py:81: AssertionError
---------------------------- Captured stdout setup ----------------------------
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
---------------------------- Captured stdout call -----------------------------
DEBUG: request.form = {}
DEBUG: request.json = {'name': 'OldName'}
DEBUG: AITR_DB_PATH = None
DEBUG: DatabaseManager DB path = C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DEBUG] Content-Type: application/json
[DEBUG] Received JSON: {'name': 'OldName'}
[DEBUG] Category.create_category called with name: OldName
[DEBUG] DB path in create_category: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DEBUG] Existing categories with this name: []
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DEBUG] Inserted category_id: 1
[DEBUG] category_id returned from create_category: 1
[DEBUG] API response on category creation: {'success': True, 'message': "Category 'OldName' added successfully", 'category_id': 1, 'category_name': 'OldName'}
[DEBUG] Content-Type (rename): application/json
[DEBUG] Received JSON (rename): {'name': 'NewName'}
[DEBUG] Extracted new_name (rename): 'NewName'
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DEBUG] Content-Type (rename): application/x-www-form-urlencoded
[DEBUG] Received FORM (rename): {'name': ''}
[DEBUG] Extracted new_name (rename): ''
DEBUG: request.form = {'name': 'Another'}
[DEBUG] Unexpected Exception in add_category_api (outer): UnsupportedMediaType: 415 Unsupported Media Type: Did not attempt to load JSON data because the request Content-Type was not 'application/json'.
[DEBUG] Content-Type (rename): application/x-www-form-urlencoded
[DEBUG] Received FORM (rename): {'name': 'Another'}
[DEBUG] Extracted new_name (rename): 'Another'
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
[DatabaseManager] Connecting to DB file: C:\Users\seanb\AppData\Local\Temp\pytest-of-seanb\pytest-99\test_rename_category0\test_api_category.db
=========================== short test summary info ===========================
FAILED tests/api/test_category_api.py::test_rename_category - assert 200 == 400
 +  where 200 = <WrapperTestResponse streamed [200 OK]>.status_code
======================== 1 failed, 10 passed in 1.48s =========================
