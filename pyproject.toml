[project]
name = "aitypingtrainer"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "pyside6>=6.9.1", # UI framework (replaces PyQt5)
    "coverage>=7.8.0",
    "email-validator>=2.2.0",
    "flask>=3.1.0",
    "graphene>=3.4.3",
    "mypy>=1.15.0",
    "openai>=1.77.0",
    "pydantic==2.11.6",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
    "pytest-qt>=4.2.0", # Required for Qt testing
    "requests>=2.32.3",
    "typing>=3.10.0.0",
    "boto3>=1.39.3",
    "psycopg2>=2.9.10",
    "types-boto3>=1.39.4",
    "types-psycopg2>=2.9.21.20250516",
    "cryptography>=45.0.6",
    "types-requests>=2.32.4.20250809",
    "docker>=7.1.0",
]



[dependency-groups]
dev = [
    "ruff>=0.11.11",
]

[tool.ruff]
line-length = 120        # Allow longer lines to reduce noisy E501 in analytics SQL and docstrings
target-version = "py313"  # Min Python you support

[tool.ruff.lint]
select = ["E", "F", "B", "ANN", "D"]  # Pycodestyle errors, Pyflakes, flake8-bugbear
extend-select = ["I"]     # isort-compatible import ordering
# ignore = ["E203", "W503"] # Black incompatibilities (only if you still use Black)

# Tests often don't require full docstrings or type annotations; keep safety rules.
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "D",       # Ignore all docstring rules in tests (Dxxx)
    "ANN001",  # Missing type annotation for function argument
    "ANN201",  # Missing return type annotation for public function
    "E402",    # Allow sys.path bootstrapping/imports after code in tests
    "S101",    # use of asserts
    "B008",    # Function call in default argument (sometimes used in fixtures)
]

[tool.ruff.lint.pydocstyle]
convention = "google"
